<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:p="http://www.springframework.org/schema/p"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
       http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-4.2.xsd
       http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.2.xsd
       http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.2.xsd
       http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.0.xsd" default-autowire="byName">

    <context:annotation-config />
    <!-- scan location -->
     <context:component-scan base-package="com.lyun.appinterface.controller"/>
    <!-- velocity config -->
   <bean id="velocityConfigurer" class="org.springframework.web.servlet.view.velocity.VelocityConfigurer">
    	<property name="configLocation"><value>classpath:velocity.properties</value></property>   
        <property name="resourceLoaderPath">
            <value>view</value>
        </property>
        <property name="velocityProperties">
            <props>
                <prop key="input.encoding">UTF-8</prop>
                <prop key="output.encoding">UTF-8</prop>
                <prop key="contentType">text/html;charset=UTF-8</prop>
                <prop key="velocimacro.library">macro/macros.vm</prop>
            </props>
        </property>
    </bean>

 	<bean id="VelocityViewResolver"
        class="org.springframework.web.servlet.view.velocity.VelocityLayoutViewResolver">
        <property name="order" value="2" />
        <property name="viewClass"
            value="org.springframework.web.servlet.view.velocity.VelocityLayoutView">
        </property>
     <!--  是否缓存模板   -->
        <property name="cache" value="false" />
        <property name="contentType" value="text/html;charset=UTF-8"></property>
      <!-- 	是否使用spring对宏定义的支持 -->
        <property name="exposeSpringMacroHelpers" value="true"></property>
        <property name="prefix" value="/"></property>
        <property name="suffix" value=".vm"></property>
      <!--  toolbox配置文件路径  -->
        <property name="toolboxConfigLocation"
            value="/WEB-INF/toolbox.xml">
        </property>
        <property name="layoutUrl" value="layout/default.vm"></property>
        <property name="layoutKey" value="layout"></property>
        <property name="screenContentKey" value="screen_content"></property>
    </bean>
    
    <bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
        <!-- one of the properties available; the maximum file size in bytes -->
        <property name="maxUploadSize" value="250000000" />
    </bean>
    
   
     <!-- 根据客户端的不同的请求决定不同的view进行响应, 如 /blog/1.json /blog/1.xml -->  
    <bean class="org.springframework.web.servlet.view.ContentNegotiatingViewResolver">  
    	<property name="order" value="1" />
        <!-- 设置为true以忽略对Accept Header的支持 -->  
        <property name="ignoreAcceptHeader" value="true" />  
          
        <!-- 在没有扩展名时即: "/blog/1" 时的默认展现形式 -->  
        <property name="defaultContentType" value="text/html" />  
  
        <!-- 扩展名至mimeType的映射,即 /blog.json => application/json -->  
        <property name="mediaTypes">  
            <map>  
                <entry key="html" value="text/html" />  
                <entry key="pdf" value="application/pdf" />  
                <entry key="xsl" value="application/vnd.ms-excel" />  
                <entry key="xml" value="application/xml" />  
                <entry key="json" value="application/json" />  
            </map>  
        </property>  
      
        <!-- 用于开启 /blog/123?format=json 的支持 -->  
        <property name="favorParameter" value="false" />  
        <property name="viewResolvers">  
            <list>  
                <bean class="org.springframework.web.servlet.view.BeanNameViewResolver" />  
              <!--   <bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">    
                    <property name="prefix" value="/WEB-INF/view/" />  
                    <property name="suffix" value=".html"></property>  
                </bean>   --> 
            </list>  
        </property>  
        <property name="defaultViews">  
            <list>  
                <!-- for application/json -->  
                <bean class="org.springframework.web.servlet.view.json.MappingJackson2JsonView" />  
                <!-- for application/xml -->  
                
                <bean class="org.springframework.web.servlet.view.xml.MarshallingView">   
                    <property name="marshaller">   
                        <bean class="org.springframework.oxm.xstream.XStreamMarshaller"></bean>
                    </property>   
                </bean>   
                
            </list>  
        </property>  
    </bean> 
  
   
   
    <!-- spring validation -->
     <mvc:annotation-driven conversion-service="conversionService"  validator="validator"/>
    
        <bean id="conversionService"
          class="org.springframework.format.support.FormattingConversionServiceFactoryBean"/>
          <bean id="validator"
         class="org.springframework.validation.beanvalidation.LocalValidatorFactoryBean">
         	  <property name="providerClass"  value="org.hibernate.validator.HibernateValidator"/>
       		 <!--不设置则默认为classpath下的 ValidationMessages.properties -->
        	<property name="validationMessageSource" ref="validatemessageSource"/>
         </bean>
          <bean id="validatemessageSource" class="org.springframework.context.support.ReloadableResourceBundleMessageSource">  
	        <property name="basename" value="classpath:validatemessages"/>  
	        <property name="fileEncodings" value="utf-8"/>  
	        <property name="cacheSeconds" value="120"/>  
    	</bean>
    	
   

</beans>
